make-image => makeImage
read-image => readImage
image? => Haskell has types
image-ref => ref
image-set! => Haskell is pure
image-rows => rows
image-cols => cols
image-transpose => transpose
convolve-rows => convolveRows / convolveRows'
convolve-cols => convolveCols / convolveCols'
convolve => convolve / convolve'
downsample-cols => downsampleCols
downsample-rows => downsampleRows
downsample => downsample
upsample-cols => upsampleCols
upsample-rows => upsampleRows
upsample => upsample
image-pad => pad
image-crop => crop
left-to-right => leftToRight / leftToRight'
top-to-bottom => topToBottom / topToBottom'
image-map => imageMap
read-color-image => readColorImage
color-image? => Haskell has types
color-image-red => colorImageRed
color-image-green => colorImageGreen
color-image-blue => colorImageBlue
rgb->color-image => rgbToColorImage
color-image->rgb => colorImageToRGB
image-normalize => normalize
image-shrink => shrink
write-image => writeImage
fold => imageFold
array->image => arrayToImage
image->array => imageToArray
write-color-image => writeImage
(+) => (.+), (+.), (.+.)
(-) => (.-), (-.), (.-.)
(*) => (.*), (*.), (.*.)
(/) => (./), (/.), (./.)
(>) => (.>), (>.), (.>.)
(<) => (.<), (<.), (.<.)
(=) => (.==), (==.), (.==.)
dilate => dilate, dilate', dilate''
erode => erode, erode', erode''
open => open, open', open''
close => close, close', close''
rgb->hsi => rgbToHSI
hsi->rgb => hsiToRGB
color-image->hsi => colorImageToHSI
hsi->color-image => hsiToColorImage
real-part => realPart
imag-part => imagPart
complex => magnitude
complex-image->polar => polar
complex-image->rectangular => complexImageRectangular
magnitude => magnitude
angle => angle
make-filter => makeFilter
fft => fft -- purely functional, ST version should be implemented 
ifft => ifft -- purely functional, ST version should be implemented
distance-transform => distanceTransform
outline => outline
median-filter => medianFilter
matrix-product => matrixProduct
areas => areas
label => label
perimeters => perimeters
bounding-boxes => boundingBoxes
make-hot-image => makeHotImage
centers-of-mass => centersOfMass
